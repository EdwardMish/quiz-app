[{"/Users/spare12/Documents/SPARE's Macbook Pro/GitHub/quiz-app/src/index.js":"1","/Users/spare12/Documents/SPARE's Macbook Pro/GitHub/quiz-app/src/App.js":"2","/Users/spare12/Documents/SPARE's Macbook Pro/GitHub/quiz-app/src/reportWebVitals.js":"3","/Users/spare12/Documents/SPARE's Macbook Pro/GitHub/quiz-app/src/Components/Settings.js":"4","/Users/spare12/Documents/SPARE's Macbook Pro/GitHub/quiz-app/src/Components/FetchButton.js":"5","/Users/spare12/Documents/SPARE's Macbook Pro/GitHub/quiz-app/src/Reducer.js":"6","/Users/spare12/Documents/SPARE's Macbook Pro/GitHub/quiz-app/src/Components/Question.js":"7"},{"size":693,"mtime":1616435886183,"results":"8","hashOfConfig":"9"},{"size":700,"mtime":1616441756572,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1615755788510,"results":"11","hashOfConfig":"9"},{"size":2625,"mtime":1616440000565,"results":"12","hashOfConfig":"9"},{"size":1274,"mtime":1616440000564,"results":"13","hashOfConfig":"9"},{"size":1304,"mtime":1616441098989,"results":"14","hashOfConfig":"9"},{"size":2205,"mtime":1616443274944,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"uj0ku2",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},"/Users/spare12/Documents/SPARE's Macbook Pro/GitHub/quiz-app/src/index.js",[],"/Users/spare12/Documents/SPARE's Macbook Pro/GitHub/quiz-app/src/App.js",[],"/Users/spare12/Documents/SPARE's Macbook Pro/GitHub/quiz-app/src/reportWebVitals.js",[],["33","34"],"/Users/spare12/Documents/SPARE's Macbook Pro/GitHub/quiz-app/src/Components/Settings.js",["35"],"import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux'\n\nfunction Settings() {\n  const [options, setOptions] = useState(null);\n\n  const loading = useSelector(state => state.options.loading)\n\n  const questionCategory = useSelector(state => state.options.question_category)\n  const questionDifficulty = useSelector(state => state.options.question_difficulty)\n  const questionType = useSelector(state => state.options.question_type)\n\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    const apiUrl = `https://opentdb.com/api_category.php`;\n\n    handleLoadingChange(true);\n\n    fetch(apiUrl)\n      .then((res) => res.json())\n      .then((response) => {\n        handleLoadingChange(false);\n        setOptions(response.trivia_categories);\n      });\n  }, [setOptions]);\n\n  const handleLoadingChange = value => {\n    dispatch({\n      type: 'CHANGE_LOADING',\n      loading: value\n    })\n  }\n\n  const handleCategoryChange = event => {\n    dispatch({\n      type: 'CHANGE_CATEGORY',\n      question_category: event.target.value\n    })\n  }\n\n  const handleDifficultyChange = event => {\n    dispatch({\n      type: 'CHANGE_DIFFICULTY',\n      question_difficulty: event.target.value\n    })\n  }\n\n  const handleTypeChange = event => {\n    dispatch({\n      type: 'CHANGE_TYPE',\n      question_type: event.target.value\n    })\n  }\n\n  if (!loading) {\n    return (\n      <div>\n        <div>\n          <h2>Select Category:</h2>\n          <select value={questionCategory} onChange={handleCategoryChange}>\n            <option>All</option>\n            {options && options.length && options.map(option => <option value={option.id} key={option.id}>{option.name}</option>)}\n          </select>\n        </div>\n\n        <div>\n          <h2>Select Difficulty:</h2>\n          <select value={questionDifficulty} onChange={handleDifficultyChange}>\n            <option value=\"\" key=\"difficulty-0\">All</option>\n            <option value=\"easy\" key=\"difficulty-1\">Easy</option>\n            <option value=\"medium\" key=\"difficulty-2\">Medium</option>\n            <option value=\"hard\" key=\"difficulty-3\">Hard</option>\n          </select>\n        </div>\n\n        <div>\n          <h2>Select Question Type:</h2>\n          <select value={questionType} onChange={handleTypeChange}>\n            <option value=\"\" key=\"type-0\">All</option>\n            <option value=\"multiple\" key=\"type-1\">Multiple Choice</option>\n            <option value=\"boolean\" key=\"type-2\">True/False</option>\n          </select>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <p>\n      LOADING...\n    </p>\n  );\n}\nexport default Settings;","/Users/spare12/Documents/SPARE's Macbook Pro/GitHub/quiz-app/src/Components/FetchButton.js",[],"/Users/spare12/Documents/SPARE's Macbook Pro/GitHub/quiz-app/src/Reducer.js",[],"/Users/spare12/Documents/SPARE's Macbook Pro/GitHub/quiz-app/src/Components/Question.js",["36"],"import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux'\n\nconst decodeHTML = function (html) {\n  const txt = document.createElement('textarea');\n  txt.innerHTML = html;\n  return txt.value;\n};\n\nfunction Question() {\n  const [answerSelected, setAnswerSelected] = useState(false)\n  const [answerCorrect, setAnswerCorrect] = useState(null)\n\n  const score = useSelector(state => state.score)\n\n  const questions = useSelector(state => state.questions)\n  const questionIndex = useSelector(state => state.index)\n\n  const dispatch = useDispatch()\n\n  const question = questions[questionIndex]\n  const answer = question.correct_answer\n\n  const getRandomInt = (max) => {\n    return Math.floor(Math.random() * Math.floor(max));\n  }\n  let options = [...question.incorrect_answers];\n  options.splice(getRandomInt(options.length), 0, question.correct_answer)\n\n  const handleListItemClick = event => {\n    setAnswerSelected(true)\n\n    if (event.target.textContent === answer) {\n      setAnswerCorrect(true)\n\n      dispatch({\n        type: 'SET_SCORE',\n        score: score + 1\n      })\n    } else {\n      setAnswerCorrect(false)\n    }\n\n    setTimeout(() => {\n      dispatch({\n        type: 'SET_INDEX',\n        index: questionIndex + 1\n      })\n\n      setAnswerSelected(false)\n      setAnswerCorrect(null)\n    }, 1000)\n  }\n\n  /*\n    {\n      \"category\": \"Entertainment: Video Games\",\n      \"type\": \"boolean\",\n      \"difficulty\": \"easy\",\n      \"question\": \"Peter Molyneux was the founder of Bullfrog Productions.\",\n      \"correct_answer\": \"True\",\n      \"incorrect_answers\": [\n        \"False\"\n      ]\n    }\n  */\n\n  if (!answerSelected) {\n    return (\n      <div>\n        <p>Question {questionIndex + 1}</p>\n        <h3>{decodeHTML(question.question)}</h3>\n        <ul>\n          {options.map((option, i) => <li key={i} onClick={handleListItemClick}>{decodeHTML(option)}</li>)}\n        </ul>\n        <div>Score: {score} / {questionIndex}</div>\n      </div>\n    )\n  } else if (answerCorrect) {\n    return (\n      <div>\n        Correct\n      </div>\n    )\n  } else if (!answerCorrect) {\n    return (\n      <div>\n        Incorrect\n      </div>\n    )\n  }\n}\nexport default Question;",{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":26,"column":6,"nodeType":"43","endLine":26,"endColumn":18,"suggestions":"44"},{"ruleId":"45","severity":1,"message":"46","line":1,"column":17,"nodeType":"47","messageId":"48","endLine":1,"endColumn":26},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleLoadingChange'. Either include it or remove the dependency array.","ArrayExpression",["51"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"52","fix":"53"},"Update the dependencies array to be: [handleLoadingChange, setOptions]",{"range":"54","text":"55"},[806,818],"[handleLoadingChange, setOptions]"]